name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8, 3.9]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set-Up poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.12
      - name: Install library
        run: poetry install
      - name: Read all notebooks
        run: |
          nbdev_read_nbs
      - name: Check if all notebooks are cleaned
        # Local tests will usually have uncommited changes
        if: ${{ !env.ACT }}
        run: |
          echo "Check we are starting with clean git checkout"
          if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
          echo "Trying to strip out notebooks"
          nbdev_clean_nbs
          echo "Check that strip out was unnecessary"
          git status -s # display the status to see which nbs need cleaning up
          if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi
      - name: Check if there is no diff library/notebooks
        run: |
          if [ -n "$(nbdev_diff_nbs)" ]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi
      - name: Run tests
        run: |
          nbdev_test_nbs
  release:
    name: Release new version on GitHub
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && ${{ !env.ACT }}
    steps:
      - name: Set up Git
        uses: actions/checkout@v2
      - name: Prepare repository
        run: git fetch --unshallow --tags
      - name: Run release script
        run: bash .auto/run_auto.sh
        env:
          # To be able to trigger next publish event
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
